<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "- //mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jaezi.srminterface.dao.WeChatUserDao">
    <resultMap id="weChatUser" type="com.jaezi.srminterface.model.WeChatUser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="open_id" jdbcType="INTEGER" property="openId"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
    </resultMap>

    <resultMap id="weChatUserVo" type="com.jaezi.srminterface.vo.WeChatUserVo">
        <!--<id column="id" jdbcType="INTEGER" property="id"/>
        <result column="pid" jdbcType="INTEGER" property="pid"/>
        <result column="permission_code" jdbcType="VARCHAR" property="permissionCode"/>
        <result column="permission_name" jdbcType="VARCHAR" property="permissionName"/>
        <result column="permission_type" jdbcType="VARCHAR" property="permissionType"/>
        <result column="is_leaf" jdbcType="INTEGER" property="isLeaf"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>-->
    </resultMap>

    <sql id="base_column">
        swu.id,
        swu.open_id,
        swu.user_id,
        swu.nick_name
    </sql>

    <!-- 查询所有用户微信绑定 -->
    <select id="getAllVos" resultMap="weChatUser" parameterType="java.util.Map">
        SELECT
        <include refid="base_column"></include>
        FROM sys_wechat_user swu
    </select>

    <!-- 根据ID 获取用户微信绑定 -->
    <select id="getOneById" parameterType="java.lang.Integer" resultMap="weChatUser">
        SELECT
        <include refid="base_column"></include>
        FROM sys_wechat_user swu WHERE swu.id = #{id}
    </select>

    <!-- 获取关注微信服务号用户个数 -->
    <select id="count" resultType="java.lang.Integer">
        SELECT count(1) FROM sys_wechat_user
    </select>

    <!-- 根据最大ID获取对应的OPENID -->
    <select id="getOpenIdByMaxId" resultType="java.lang.String">
        SELECT open_id FROM sys_wechat_user WHERE id = (SELECT max(id) FROM sys_wechat_user)
    </select>

    <!-- 获取最大ID -->
    <select id="getMaxId" resultType="java.lang.Integer">
        SELECT max(id) FROM sys_wechat_user
    </select>

    <!-- 添加一个用户微信绑定 -->
    <insert id="add" parameterType="com.jaezi.srminterface.model.WeChatUser" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        INSERT INTO sys_wechat_user(open_id, user_id, nick_name)
        VALUES(#{openId}, #{userId}, #{nickName})
    </insert>

    <!-- 修改用户微信绑定资料 -->
    <update id="update" parameterType="com.jaezi.srminterface.model.WeChatUser">
        UPDATE sys_wechat_user
        SET
        <trim suffixOverrides=",">
            <if test="openId != null and openId != ''">open_id = #{openId},</if>
            <if test="userId != null and userId != ''">user_id = #{userId},</if>
            <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
        </trim>
        WHERE id = #{id}
    </update>

    <!-- 批量更新关注微信服务号用户 -->
    <update id="updateBatch">
        UPDATE sys_wechat_user
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="nick_name = case" suffix="end,">
                <foreach collection="weChatUserList" item="item" index="index">
                    WHEN open_id = #{item.openId}
                    THEN #{item.nickName}
                </foreach>
            </trim>
        </trim>
        WHERE open_id IN
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.openId}
        </foreach>
    </update>

    <!-- 批量添加关注微信服务号用户 -->
    <insert id="addBatch">
        INSERT IGNORE sys_wechat_user(id, open_id, user_id, nick_name)
        VALUES
        <foreach collection="weChatUserList" item="item" index="index" separator=",">
            (#{item.id}, #{item.openId}, #{item.userId}, #{item.nickName})
        </foreach>
    </insert>

    <!-- 删除一个用户微信绑定 -->
    <delete id="delete" parameterType="java.lang.Integer">

    </delete>

</mapper>